---
- name: LDAP | Gather facts
  ansible.builtin.set_fact: {ldap_state: "{{ state|default('started') }}"}
  when: ldap_state is not defined

- name: LDAP | Server actions
  when:
    - ldap_server
    - ansible_os_family | lower == 'debian'
  block:
    - name: LDAP | Server - Gather facts
      ansible.builtin.stat: {path: /etc/ldap}
      register: ldap_is_installed

    - name: LDAP | Server - Install the service
      when:
        - not ldap_is_installed.stat.exists
        - ldap_state in ['present','started']
      block:
        # service
        - ansible.builtin.import_tasks: server/configuration/prerequisites.yml
        - ansible.builtin.import_tasks: server/status/install.yml
        - ansible.builtin.import_tasks: server/configuration/properties.yml
        - ansible.builtin.import_tasks: server/configuration/dit.yml
        - ansible.builtin.import_tasks: server/configuration/policies.yml
        - ansible.builtin.import_tasks: server/configuration/proxy.yml
        - ansible.builtin.import_tasks: server/configuration/users.yml
        - ansible.builtin.import_tasks: server/configuration/sudo.yml
        - ansible.builtin.import_tasks: server/configuration/tls.yml
          when: ldap_tls
        # utilities
        - ansible.builtin.import_tasks: server/tools/utils.yml
          when: ldap_utils
        - ansible.builtin.import_tasks: server/tools/lam.yml
          when: ldap_lam

    - name: LDAP | Server - Control the service
      when: ldap_state in ['present','started','absent']
      ansible.builtin.assert: {that: true, quiet: true}
      changed_when: true
      notify: service ldap

    - name: LDAP | Server - Uninstall the service
      when: ldap_state == 'absent'
      ansible.builtin.import_tasks: server/status/uninstall.yml

- name: LDAP | Client actions
  block:
    - name: LDAP | Client - Gather facts
      ansible.builtin.stat: {path: /etc/sssd}
      register: ldap_sssd_is_installed

    - name: LDAP | Client - Install the service
      when:
        - not ldap_sssd_is_installed.stat.exists
        - ldap_state in ['present','started']
      ansible.builtin.import_tasks: client/install.yml

    - name: LDAP | Client - Control the service
      when: ldap_state in ['present','started','absent']
      ansible.builtin.assert: {that: true, quiet: true}
      changed_when: true
      notify: service sssd

    - name: LDAP | Client - Uninstall the service
      when: ldap_state == 'absent'
      ansible.builtin.import_tasks: client/uninstall.yml
