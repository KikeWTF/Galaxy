---
- name: LDAP | Server actions
  when:
    - ansible_os_family | lower == 'debian'
    - ldap_server_ip == ansible_default_ipv4.address
  block:
    - name: LDAP | Server - Install the prerequisites
      when: state is not defined or state in ['present', 'configured', 'started']
      ansible.builtin.import_tasks: server/prerequisites.yml

    - name: LDAP | Server - Install the service
      when: state is not defined or state in ['present', 'configured', 'started']
      ansible.builtin.import_tasks: server/install.yml

    - name: LDAP | Server - Configure the service
      when: state is not defined or state in ['present', 'configured', 'started']
      block:
        - ansible.builtin.import_tasks: server/configuration/properties.yml
        - ansible.builtin.import_tasks: server/configuration/dit.yml
        - ansible.builtin.import_tasks: server/configuration/policies.yml
        - ansible.builtin.import_tasks: server/configuration/proxy.yml
        - ansible.builtin.import_tasks: server/configuration/users.yml
        - ansible.builtin.import_tasks: server/configuration/sudo.yml
        - ansible.builtin.import_tasks: server/configuration/tls.yml
          when: ldap_tls

    - name: LDAP | Server - Install the server utilities
      when: state is not defined or state in ['present', 'configured', 'started']
      block:
        - ansible.builtin.import_tasks: server/utils/client.yml
          when: ldap_utils

        - ansible.builtin.import_tasks: server/utils/lam.yml
          when: ldap_lam

    - name: LDAP | Start/Stop the services
      when: state|default('started') in ['started', 'stopped']
      ansible.builtin.import_tasks: server/status.yml
      vars:
        ldap_status: "{{ state }}"

- name: LDAP | Client actions
  block:
    - name: LDAP | Client - Install the SSSD client
      when: state is not defined or state in ['present', 'configured', 'started']
      ansible.builtin.import_tasks: client/sssd.yml

    - name: LDAP | Start/Stop the service
      when: state|default('started') in ['started', 'stopped']
      ansible.builtin.import_tasks: client/status.yml
      vars:
        ldap_status: "{{ state }}"

- name: LDAP | Uninstall the service
  when: state == 'absent'
  ansible.builtin.import_tasks: uninstall.yml
