---
- name: LDAP | Configure - Default DC
  community.general.ldap_entry:
    dn: "{{ ldap_dn }}"
    state: present
    objectClass: [top, dcObject, organization]
    attributes:
      dc: "{{ (ldap_domain | split('.'))[1] if ldap_domain | split('.') | count > 2 else ldap_domain | split('.') | first  }}"
      o: "{{ ldap_domain | split('.') | first }}"
    # connection
    bind_dn: cn=admin,{{ ldap_dn }}
    bind_pw: "{{ ldap_admin_password }}"

- name: LDAP | Configure - Default OUs
  community.general.ldap_entry:
    dn: ou={{ item }},{{ ldap_dn }}
    state: present
    objectClass: [organizationalUnit]
    attributes:
      ou: "{{ item }}"
    # connection
    bind_dn: cn=admin,{{ ldap_dn }}
    bind_pw: "{{ ldap_admin_password }}"
  with_items:
    - groups
    - users
    - system

- name: LDAP | Configure - Proxy user
  community.general.ldap_entry:
    dn: cn=proxy,ou=system,{{ ldap_dn }}
    state: present
    objectClass: [simpleSecurityObject, organizationalRole]
    attributes:
      cn: proxy
      userPassword: readonly
    # connection
    bind_dn: cn=admin,{{ ldap_dn }}
    bind_pw: "{{ ldap_admin_password }}"

- name: LDAP | Configure - Default Groups
  community.general.ldap_entry:
    dn: cn={{ item }},ou=groups,{{ ldap_dn }}
    state: present
    objectClass: [posixGroup]
    attributes:
      cn: "{{ item }}"
      gidNumber: "{{ ldap_minid + idx }}"
      description: "{{ item | title }} users"
    # connection
    bind_dn: cn=admin,{{ ldap_dn }}
    bind_pw: "{{ ldap_admin_password }}"
  with_items: "{{ ldap_users | map(attribute='group') | unique | map('lower') }}"
  loop_control:
    index_var: idx

- name: LDAP | Configure - Default Users
  community.general.ldap_entry:
    dn: cn={{ item.surname | lower }},ou=users,{{ ldap_dn }}
    state: present
    objectClass:
      - inetOrgPerson
      - posixAccount
      - shadowAccount
    attributes:
      # posixAccount
      cn: "{{ item.surname | lower }}"
      uid: "{{ item.surname | lower }}"
      uidNumber: "{{ ldap_minid + idx }}"
      gidNumber: "{{ (ldap_users | map(attribute='group') | unique).index(item.group) + ldap_minid }}"
      gecos: "{{ item.name | title }} {{ item.surname | title }}"
      description: "{{ item.name | title }} {{ item.surname | title }}"
      homeDirectory: "{{ '/nonexistent' if item.system|default(false) else '/home/' + item.group + '/' + item.surname | lower }}"
      loginShell: /bin/{{ 'false' if item.system|default(false) else 'bash' }}
      # inetOrgPerson
      sn: "{{ item.surname | title }}"
      userPassword: "{{ item.password }}"
      givenName: "{{ item.name | title }}"
      displayName: "{{ item.name | title }} {{ item.surname | title }}"
      mail: "{{ item.group | lower if item.system|default(false) else item.name | lower }}@{{ ldap_domain }}"
      # TODO: shadowAccount (force password change on first login)
      #shadowMin: 0
      #shadowMax: 99999
      #shadowLastChange: 0
    # connection
    bind_dn: cn=admin,{{ ldap_dn }}
    bind_pw: "{{ ldap_admin_password }}"
  with_items: "{{ ldap_users }}"
  loop_control:
    index_var: idx

    # TODO: ACLs
    #- name: LDAP | Configure - Domain ACL
    #  community.general.ldap_attrs:
    #    dn: olcDatabase={1}mdb,cn=config
    #    state: exact
    #    attributes:
    #      olcAccess:
    #        - >-
    #          {0}to attrs=userPassword,shadowLastChange
    #          by self write
    #          by anonymous auth
    #          by dn="cn=admin,{{ ldap_dn }}" write
    #          by dn="cn=proxy,ou=system,{{ ldap_dn }}" read
    #          by * none
    #        - >-
    #          {1}to dn.base="{{ ldap_dn }}"
    #          by dn="cn=admin,{{ ldap_dn }}" write
    #          by dn="cn=proxy,ou=system,{{ ldap_dn }}" read
    #          by * read